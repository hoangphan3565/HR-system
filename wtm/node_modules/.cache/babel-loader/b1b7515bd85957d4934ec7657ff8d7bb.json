{"ast":null,"code":"var _jsxFileName = \"G:\\\\ISC-FE\\\\hrs\\\\wtm\\\\src\\\\Components\\\\Positions\\\\Item.js\";\nimport React, { useRef } from 'react';\nimport { Tag, Tooltip, Button, Modal, Form, Input, Select, DatePicker, Popconfirm, Statistic, Card, notification } from 'antd';\nimport { SolutionOutlined, EditOutlined, UsergroupDeleteOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport './css/styles.css';\nimport { useEffect } from 'react';\nimport PositionService from '../../Services/PositionServices';\nimport axios from 'axios';\n\nconst Item = props => {\n  //console.log(props.e);\n  const [visible, setVisible] = useState(false);\n  const [updateVisible, setUpdateVisible] = useState(false);\n  const id = useRef();\n  const name = useRef();\n  const layout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 18\n    }\n  };\n  const {\n    Option\n  } = Select;\n  const [form] = Form.useForm();\n\n  const toggleUpdateVisible = () => {\n    setUpdateVisible(true);\n  };\n\n  const handleEmplCancel = () => {\n    setVisible(false);\n  };\n\n  const handleUpdateCancel = () => {\n    setUpdateVisible(false);\n  };\n\n  const onFinish = () => {\n    const position = {\n      pos_ID: id.current.props.value,\n      positionName: name.current.props.value\n    }; //console.log(position);\n\n    PositionService.update(props.e.pos_ID, position).then(res => {\n      console.log(res.status);\n    });\n    set;\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({\n      pos_ID: props.e.pos_ID,\n      positionName: props.e.positionName\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: props.e.pos_ID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, props.e.pos_ID), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, props.e.positionName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Update!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"circle\",\n    icon: /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }),\n    onClick: toggleUpdateVisible,\n    style: {\n      backgroundColor: \"rgb(107, 189, 243)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: updateVisible,\n    title: \"Update Position\",\n    onCancel: handleUpdateCancel,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"back\",\n      onClick: handleEmplCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      onClick: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"Update\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Id\",\n    name: \"pos_ID\",\n    rules: [{\n      required: true\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"middle\",\n    ref: id,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"positionName\",\n    rules: [{\n      required: true\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"middle\",\n    ref: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Popconfirm, {\n    placement: \"top\",\n    title: \"Are you sure delete this position    !\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"circle\",\n    icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 35\n      }\n    }),\n    style: {\n      backgroundColor: \"rgb(236, 118, 82)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default Item;","map":{"version":3,"sources":["G:/ISC-FE/hrs/wtm/src/Components/Positions/Item.js"],"names":["React","useRef","Tag","Tooltip","Button","Modal","Form","Input","Select","DatePicker","Popconfirm","Statistic","Card","notification","SolutionOutlined","EditOutlined","UsergroupDeleteOutlined","DeleteOutlined","useState","UserOutlined","useEffect","PositionService","axios","Item","props","visible","setVisible","updateVisible","setUpdateVisible","id","name","layout","labelCol","span","wrapperCol","Option","form","useForm","toggleUpdateVisible","handleEmplCancel","handleUpdateCancel","onFinish","position","pos_ID","current","value","positionName","update","e","then","res","console","log","status","set","setFieldsValue","backgroundColor","required"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Tag, Tooltip, Button, Modal, Form, Input, Select, DatePicker, Popconfirm, Statistic, Card, notification } from 'antd';\r\nimport { SolutionOutlined, EditOutlined, UsergroupDeleteOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport './css/styles.css';\r\nimport { useEffect } from 'react';\r\nimport PositionService from '../../Services/PositionServices';\r\nimport axios from 'axios';\r\nconst Item = (props) => {\r\n    //console.log(props.e);\r\n    const [visible, setVisible] = useState(false);\r\n    const [updateVisible, setUpdateVisible] = useState(false);\r\n    const id=useRef();\r\n    const name=useRef();\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 18 },\r\n    };\r\n    const { Option } = Select;\r\n    const [form] = Form.useForm();\r\n\r\n    const toggleUpdateVisible = () => {\r\n        setUpdateVisible(true);\r\n    }\r\n    const handleEmplCancel = () => {\r\n        setVisible(false);\r\n    }\r\n    const handleUpdateCancel = () => {\r\n        setUpdateVisible(false);\r\n    }\r\n    const onFinish = () => {\r\n\r\n        const position={\r\n            pos_ID:id.current.props.value,\r\n            positionName:name.current.props.value,\r\n        }\r\n        //console.log(position);\r\n        PositionService.update(props.e.pos_ID,position).then(res=>{\r\n            console.log(res.status);\r\n        })\r\n        set\r\n    }\r\n    useEffect(()=>{\r\n        form.setFieldsValue({\r\n            pos_ID:props.e.pos_ID,\r\n            positionName:props.e.positionName\r\n        });\r\n    });\r\n    return (\r\n        <tr key={props.e.pos_ID}>\r\n            <td>{props.e.pos_ID}</td>\r\n            <td>{props.e.positionName}</td>\r\n            <td>\r\n                <Tooltip title=\"Update!\">\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        icon={<EditOutlined />}\r\n                        onClick={toggleUpdateVisible}\r\n                        style={{ backgroundColor: \"rgb(107, 189, 243)\" }}\r\n                    />\r\n                    <Modal\r\n                        visible={updateVisible}\r\n                        title=\"Update Position\"\r\n                        onCancel={handleUpdateCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={handleEmplCancel}>\r\n                                Cancel\r\n                      </Button>,\r\n                            <Button key=\"submit\" type=\"primary\" onClick={onFinish}>\r\n                                Update\r\n                      </Button>\r\n                        ]}\r\n                    >\r\n                        <Form {...layout}  form={form}>\r\n                            <Form.Item\r\n                                label=\"Id\"\r\n                                name=\"pos_ID\"\r\n                                rules={[{ required: true }]}\r\n                                hasFeedback>\r\n                                <Input size=\"middle\" ref={id} readOnly/>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"Name\"\r\n                                name=\"positionName\"\r\n                                rules={[{ required: true }]}\r\n                                hasFeedback>\r\n                                <Input size=\"middle\" ref={name}/>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete\">\r\n                    <Popconfirm\r\n                        placement=\"top\"\r\n                        title=\"Are you sure delete this position    !\"\r\n                    >\r\n                        <Button\r\n                            shape=\"circle\"\r\n                            icon={<DeleteOutlined />}\r\n                            style={{ backgroundColor: \"rgb(236, 118, 82)\" }}\r\n                        />\r\n                    </Popconfirm>\r\n                </Tooltip>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Item;"]},"metadata":{},"sourceType":"module"}